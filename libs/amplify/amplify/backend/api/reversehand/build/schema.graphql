
type Review @aws_iam @aws_api_key {
  id: ID!
  rating: Int
  comment: String
  tradesman: ID
  date_created: String
  advert: ArchivedAdvert
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  reviewAdvertId: ID
}

type ArchivedBid @aws_iam @aws_api_key {
  id: ID!
  tradesman: ID
  date_created: AWSDate
  date_closed: AWSDate
  price_lower: Int
  price_upper: Int
  advert: ID!
  accepted_bid: ArchivedAdvert
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type ArchivedAdvert @aws_iam @aws_api_key {
  id: ID!
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  date_closed: AWSDate
  bids(filter: ModelArchivedBidFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelArchivedBidConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Advert @aws_iam @aws_api_key {
  id: ID!
  bids(filter: ModelBidFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelBidConnection
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type Bid @aws_iam @aws_api_key {
  id: ID!
  tradesman: ID
  advert: ID!
  price_lower: Int
  price_upper: Int
  date_created: AWSDate
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelReviewConnection @aws_api_key @aws_iam {
  items: [Review]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelReviewFilterInput {
  id: ModelIDInput
  rating: ModelIntInput
  comment: ModelStringInput
  tradesman: ModelIDInput
  date_created: ModelStringInput
  and: [ModelReviewFilterInput]
  or: [ModelReviewFilterInput]
  not: ModelReviewFilterInput
  reviewAdvertId: ModelIDInput
}

type Query {
  getReview(id: ID!): Review @aws_api_key @aws_iam
  listReviews(filter: ModelReviewFilterInput, limit: Int, nextToken: String): ModelReviewConnection @aws_api_key @aws_iam
  syncReviews(filter: ModelReviewFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelReviewConnection @aws_api_key @aws_iam
  getArchivedBid(id: ID!): ArchivedBid @aws_api_key @aws_iam
  listArchivedBids(filter: ModelArchivedBidFilterInput, limit: Int, nextToken: String): ModelArchivedBidConnection @aws_api_key @aws_iam
  syncArchivedBids(filter: ModelArchivedBidFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelArchivedBidConnection @aws_api_key @aws_iam
  getArchivedAdvert(id: ID!): ArchivedAdvert @aws_api_key @aws_iam
  listArchivedAdverts(filter: ModelArchivedAdvertFilterInput, limit: Int, nextToken: String): ModelArchivedAdvertConnection @aws_api_key @aws_iam
  syncArchivedAdverts(filter: ModelArchivedAdvertFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelArchivedAdvertConnection @aws_api_key @aws_iam
  getAdvert(id: ID!): Advert @aws_api_key @aws_iam
  listAdverts(filter: ModelAdvertFilterInput, limit: Int, nextToken: String): ModelAdvertConnection @aws_api_key @aws_iam
  syncAdverts(filter: ModelAdvertFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelAdvertConnection @aws_api_key @aws_iam
  getBid(id: ID!): Bid @aws_api_key @aws_iam
  listBids(filter: ModelBidFilterInput, limit: Int, nextToken: String): ModelBidConnection @aws_api_key @aws_iam
  syncBids(filter: ModelBidFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelBidConnection @aws_api_key @aws_iam
}

input ModelReviewConditionInput {
  rating: ModelIntInput
  comment: ModelStringInput
  tradesman: ModelIDInput
  date_created: ModelStringInput
  and: [ModelReviewConditionInput]
  or: [ModelReviewConditionInput]
  not: ModelReviewConditionInput
  reviewAdvertId: ModelIDInput
}

input CreateReviewInput {
  id: ID
  rating: Int
  comment: String
  tradesman: ID
  date_created: String
  _version: Int
  reviewAdvertId: ID
}

input UpdateReviewInput {
  id: ID!
  rating: Int
  comment: String
  tradesman: ID
  date_created: String
  _version: Int
  reviewAdvertId: ID
}

input DeleteReviewInput {
  id: ID!
  _version: Int
}

type Mutation {
  createReview(input: CreateReviewInput!, condition: ModelReviewConditionInput): Review @aws_api_key @aws_iam
  updateReview(input: UpdateReviewInput!, condition: ModelReviewConditionInput): Review @aws_api_key @aws_iam
  deleteReview(input: DeleteReviewInput!, condition: ModelReviewConditionInput): Review @aws_api_key @aws_iam
  createArchivedBid(input: CreateArchivedBidInput!, condition: ModelArchivedBidConditionInput): ArchivedBid @aws_api_key @aws_iam
  updateArchivedBid(input: UpdateArchivedBidInput!, condition: ModelArchivedBidConditionInput): ArchivedBid @aws_api_key @aws_iam
  deleteArchivedBid(input: DeleteArchivedBidInput!, condition: ModelArchivedBidConditionInput): ArchivedBid @aws_api_key @aws_iam
  createArchivedAdvert(input: CreateArchivedAdvertInput!, condition: ModelArchivedAdvertConditionInput): ArchivedAdvert @aws_api_key @aws_iam
  updateArchivedAdvert(input: UpdateArchivedAdvertInput!, condition: ModelArchivedAdvertConditionInput): ArchivedAdvert @aws_api_key @aws_iam
  deleteArchivedAdvert(input: DeleteArchivedAdvertInput!, condition: ModelArchivedAdvertConditionInput): ArchivedAdvert @aws_api_key @aws_iam
  createAdvert(input: CreateAdvertInput!, condition: ModelAdvertConditionInput): Advert @aws_api_key @aws_iam
  updateAdvert(input: UpdateAdvertInput!, condition: ModelAdvertConditionInput): Advert @aws_api_key @aws_iam
  deleteAdvert(input: DeleteAdvertInput!, condition: ModelAdvertConditionInput): Advert @aws_api_key @aws_iam
  createBid(input: CreateBidInput!, condition: ModelBidConditionInput): Bid @aws_api_key @aws_iam
  updateBid(input: UpdateBidInput!, condition: ModelBidConditionInput): Bid @aws_api_key @aws_iam
  deleteBid(input: DeleteBidInput!, condition: ModelBidConditionInput): Bid @aws_api_key @aws_iam
}

type Subscription {
  onCreateReview: Review @aws_subscribe(mutations: ["createReview"]) @aws_api_key @aws_iam
  onUpdateReview: Review @aws_subscribe(mutations: ["updateReview"]) @aws_api_key @aws_iam
  onDeleteReview: Review @aws_subscribe(mutations: ["deleteReview"]) @aws_api_key @aws_iam
  onCreateArchivedBid: ArchivedBid @aws_subscribe(mutations: ["createArchivedBid"]) @aws_api_key @aws_iam
  onUpdateArchivedBid: ArchivedBid @aws_subscribe(mutations: ["updateArchivedBid"]) @aws_api_key @aws_iam
  onDeleteArchivedBid: ArchivedBid @aws_subscribe(mutations: ["deleteArchivedBid"]) @aws_api_key @aws_iam
  onCreateArchivedAdvert: ArchivedAdvert @aws_subscribe(mutations: ["createArchivedAdvert"]) @aws_api_key @aws_iam
  onUpdateArchivedAdvert: ArchivedAdvert @aws_subscribe(mutations: ["updateArchivedAdvert"]) @aws_api_key @aws_iam
  onDeleteArchivedAdvert: ArchivedAdvert @aws_subscribe(mutations: ["deleteArchivedAdvert"]) @aws_api_key @aws_iam
  onCreateAdvert: Advert @aws_subscribe(mutations: ["createAdvert"]) @aws_api_key @aws_iam
  onUpdateAdvert: Advert @aws_subscribe(mutations: ["updateAdvert"]) @aws_api_key @aws_iam
  onDeleteAdvert: Advert @aws_subscribe(mutations: ["deleteAdvert"]) @aws_api_key @aws_iam
  onCreateBid: Bid @aws_subscribe(mutations: ["createBid"]) @aws_api_key @aws_iam
  onUpdateBid: Bid @aws_subscribe(mutations: ["updateBid"]) @aws_api_key @aws_iam
  onDeleteBid: Bid @aws_subscribe(mutations: ["deleteBid"]) @aws_api_key @aws_iam
}

type ModelArchivedBidConnection @aws_api_key @aws_iam {
  items: [ArchivedBid]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelArchivedBidFilterInput {
  id: ModelIDInput
  tradesman: ModelIDInput
  date_created: ModelStringInput
  date_closed: ModelStringInput
  price_lower: ModelIntInput
  price_upper: ModelIntInput
  advert: ModelIDInput
  and: [ModelArchivedBidFilterInput]
  or: [ModelArchivedBidFilterInput]
  not: ModelArchivedBidFilterInput
}

input ModelArchivedBidConditionInput {
  tradesman: ModelIDInput
  date_created: ModelStringInput
  date_closed: ModelStringInput
  price_lower: ModelIntInput
  price_upper: ModelIntInput
  advert: ModelIDInput
  and: [ModelArchivedBidConditionInput]
  or: [ModelArchivedBidConditionInput]
  not: ModelArchivedBidConditionInput
}

input CreateArchivedBidInput {
  id: ID
  tradesman: ID
  date_created: AWSDate
  date_closed: AWSDate
  price_lower: Int
  price_upper: Int
  advert: ID!
  _version: Int
}

input UpdateArchivedBidInput {
  id: ID!
  tradesman: ID
  date_created: AWSDate
  date_closed: AWSDate
  price_lower: Int
  price_upper: Int
  advert: ID
  _version: Int
}

input DeleteArchivedBidInput {
  id: ID!
  _version: Int
}

type ModelArchivedAdvertConnection @aws_api_key @aws_iam {
  items: [ArchivedAdvert]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelArchivedAdvertFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  description: ModelStringInput
  customer: ModelIDInput
  location: ModelStringInput
  date_created: ModelStringInput
  date_closed: ModelStringInput
  and: [ModelArchivedAdvertFilterInput]
  or: [ModelArchivedAdvertFilterInput]
  not: ModelArchivedAdvertFilterInput
}

input ModelArchivedAdvertConditionInput {
  title: ModelStringInput
  description: ModelStringInput
  customer: ModelIDInput
  location: ModelStringInput
  date_created: ModelStringInput
  date_closed: ModelStringInput
  and: [ModelArchivedAdvertConditionInput]
  or: [ModelArchivedAdvertConditionInput]
  not: ModelArchivedAdvertConditionInput
}

input CreateArchivedAdvertInput {
  id: ID
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  date_closed: AWSDate
  _version: Int
}

input UpdateArchivedAdvertInput {
  id: ID!
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  date_closed: AWSDate
  _version: Int
}

input DeleteArchivedAdvertInput {
  id: ID!
  _version: Int
}

type ModelAdvertConnection @aws_api_key @aws_iam {
  items: [Advert]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelAdvertFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  description: ModelStringInput
  customer: ModelIDInput
  location: ModelStringInput
  date_created: ModelStringInput
  and: [ModelAdvertFilterInput]
  or: [ModelAdvertFilterInput]
  not: ModelAdvertFilterInput
}

input ModelAdvertConditionInput {
  title: ModelStringInput
  description: ModelStringInput
  customer: ModelIDInput
  location: ModelStringInput
  date_created: ModelStringInput
  and: [ModelAdvertConditionInput]
  or: [ModelAdvertConditionInput]
  not: ModelAdvertConditionInput
}

input CreateAdvertInput {
  id: ID
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  _version: Int
}

input UpdateAdvertInput {
  id: ID!
  title: String
  description: String
  customer: ID
  location: AWSJSON
  date_created: AWSDate
  _version: Int
}

input DeleteAdvertInput {
  id: ID!
  _version: Int
}

type ModelBidConnection @aws_iam @aws_api_key {
  items: [Bid]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelBidFilterInput {
  id: ModelIDInput
  tradesman: ModelIDInput
  advert: ModelIDInput
  price_lower: ModelIntInput
  price_upper: ModelIntInput
  date_created: ModelStringInput
  and: [ModelBidFilterInput]
  or: [ModelBidFilterInput]
  not: ModelBidFilterInput
}

input ModelBidConditionInput {
  tradesman: ModelIDInput
  advert: ModelIDInput
  price_lower: ModelIntInput
  price_upper: ModelIntInput
  date_created: ModelStringInput
  and: [ModelBidConditionInput]
  or: [ModelBidConditionInput]
  not: ModelBidConditionInput
}

input CreateBidInput {
  id: ID
  tradesman: ID
  advert: ID!
  price_lower: Int
  price_upper: Int
  date_created: AWSDate
  _version: Int
}

input UpdateBidInput {
  id: ID!
  tradesman: ID
  advert: ID
  price_lower: Int
  price_upper: Int
  date_created: AWSDate
  _version: Int
}

input DeleteBidInput {
  id: ID!
  _version: Int
}

