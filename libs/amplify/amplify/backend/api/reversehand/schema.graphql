# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User @model {
  id: ID!
  name: String!
  email: String!
}

type Query {
  viewBids(ad_id: String!): [Bid]!
  @function(name: "viewBidsResolver-${env}")

  viewAdverts(user_id: String!): [Advert]!
  @function(name: "viewAdvertsResolver-${env}")
}

type Mutation {
  shortListBid(ad_id: String!, bid_id: String!): Bid
  @function(name: "shortListBidResolver-${env}")

  acceptBid(user_id: String!, ad_id: String!, sbid_id: String!): Bid
  @function(name: "acceptBidResolver-${env}")
  
  createAdvert(customer_id: String!, ad_id: String!, title: String!, description: String, location: String): Bid
  @function(name: "createAdvertResolver-${env}")

  placeBid(ad_id: String!, bid_id: String!, user_id: String!, price_lower: Int!, price_upper: Int!, quote: String): Bid # quote is optional and represents a name of a file in a S3 bucket
  @function(name: "placeBidResolver-${env}")
}

type Advert implements UniqueID {
  id: String!
  title: String!
  description: String
  type: JobType
  accepted_bid: String
  location: String # temporary
  date_created: String! # temporary
  date_closed: String # temporary
}

type Notification implements UniqueID {
  id: String!
  user_id: String!
  notification: String # temporary
  date_created: String # temporary
  seen: Boolean!
}

type Bid implements UniqueID {
  id: String!
  user_id: String!
  price_lower: Int!
  price_upper: Int!
  quote: String # filename of quote stored in s3 bucket
  date_created: String!
  date_closed: String
}

type Review implements UniqueID {
  id: String!
  rating: Int
  comment: String
  user_id: String!
  advert_id: String!
  date_created: String!
}

# add more jobs here as we think of them
enum JobType {
  Plumbing
}

interface UniqueID {
  id: String!
}